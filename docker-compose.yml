version: '2'

services:
    lino:
        # If you want to development and use another image,
        # change the image to the Dockerfile that corresponds to the one you want to use.
        image: guila/lino:latest
        ports:
            - 5002:5002
        volumes:
            - .:/2018.2-Lino
        stdin_open: true
        tty: true
        environment:
            - TRAINING_EPOCHS=60
            - TELEGRAM_ACCESS_TOKEN=543678173:AAGXV6Y-gjLs0iAr_BmroNGtz60OC5nTiSk
            - VERIFY=Lino_test_FGA_bot
            # - PSID= ${PSID}
            # - FACEBOOK_ACCESS_TOKEN= ${FACEBOOK_ACCESS_TOKEN}
            # - SECRET= ${SECRET}
            - WEBHOOK_URL=https://54ff6aaa.ngrok.io/webhook
            - TELEGRAM_DB_URI=mongodb://mongo_lino:27010/lino_telegram
            # - FACEBOOK_DB_URI= ${FACEBOOK_DB_URI}
        # bot credentials in train.py or another train file.
        depends_on:
            - cronjob
            - mongo_telegram
            - mongo_facebook

    mongo_telegram:
        image: mongo:latest
        command: mongod --port 27010
        volumes:
            - /l/mongo_telegram/mongo_telegram_db:/data/db
        ports:
            - 27010:27010

    mongo_facebook:
        image: mongo:latest
        command: mongod --port 27011
        volumes:
            - /l/mongo_facebook/mongo_facebook_db:/data/db
        ports:
            - 27011:27011

    cronjob:
        image: guila/cronjob:latest
        volumes:
            - ./outputs:/home
        stdin_open: true
        tty: true
        environment:
            - URI_TELEGRAM=mongodb://mongo_lino:27010/lino_telegram
            # - URI_FACEBOOK: ${URI_FACEBOOK}
            - TELEGRAM_ACCESS_TOKEN=543678173:AAGXV6Y-gjLs0iAr_BmroNGtz60OC5nTiSk
            # - FACEBOOK_ACCESS_TOKEN: ${FACEBOOK_ACCESS_TOKEN}
            # - PSID: ${PSID}
        depends_on:
            - mongo_telegram
            - mongo_facebook
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:5.4.
        container_name: elasticsearch
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - docker_elk
    kibana:
        image: docker.elastic.co/kibana/kibana:5.4.3
        container_name: kibana
        environment:
            - "ELASTICSEARCH_URL=http://elasticsearch:9200"
        ports:
            - "5601:5601"
        networks:
            - docker_elk
        depends_on:
networks:
  docker_elk:
    driver: bridge