stages:
  - test
  - build
  - deploy

############################################################
######################## Variables #########################
############################################################
variables:
  LINO_LATEST_IMAGE: $DOCKER_USER/lino
  CRONJOB_LATEST_IMAGE: $DOCKER_USER/cronjob
  LINO_LATEST_IMAGE_FACEBOOK: $DOCKER_USER/lino-facebook


############################################################
######################## Tests #############################
############################################################
test_flake8:
  image: ejplatform/python:alpine
  stage: test
  script:
    - flake8


############################################################
######################## Build #############################
############################################################
build lino-telegram:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build -f docker/Telegram.Dockerfile -t $LINO_LATEST_IMAGE .
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push $LINO_LATEST_IMAGE
  only:
    - /master/
  environment: production

build lino-telegram-dev:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build -f docker/Telegram.Dockerfile -t $LINO_LATEST_IMAGE:homolog .
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push $LINO_LATEST_IMAGE:homolog
  only:
    - /devel/

build cronjob:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build . -t $CRONJOB_LATEST_IMAGE -f docker/Cronjob.Dockerfile
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push $CRONJOB_LATEST_IMAGE
  only:
    - /master/
  environment: production

build lino-facebook:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build -f docker/Messenger.Dockerfile -t $LINO_LATEST_IMAGE_FACEBOOK .
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker push $LINO_LATEST_IMAGE_FACEBOOK
  only:
    - /master/
  environment: production



############################################################
######################## Deploy ############################
############################################################
deploy digital-ocean-deploy:
  image: docker
  stage: deploy
  only:
    - /master/
  script:
    - sudo docker-compose -f /root/docker-compose.yml up -d --build
  environment: deploy
  when: on_success
  tags:
    - deploy-do